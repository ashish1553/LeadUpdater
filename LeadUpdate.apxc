global class LeadUpdate implements 
    Database.Batchable<sObject>, Database.Stateful {
    
    // instance member to retain state across transactions
    global Integer recordsProcessed = 0;
        
    global Database.QueryLocator start(Database.BatchableContext bc) 
    {
        return Database.getQueryLocator(
            'SELECT Name, Country, City, LeadSource, Rating FROM Lead WHERE Country = \'US\' AND City = \'New York\'');
    }
    global void execute(Database.BatchableContext bc, List<Lead> scope){
        // process each batch of records
        List<Lead> leads = new List<Lead>();
        for (Lead unit : scope) {
            unit.LeadSource = 'Web';
            unit.Rating = 'Hot';
            
            leads.add(unit);
        }
        update leads;
        recordsProcessed = recordsProcessed + 1;
    }    
    global void finish(Database.BatchableContext bc){
        System.debug(recordsProcessed + ' records processed. Shazam!');
        
    }    
}